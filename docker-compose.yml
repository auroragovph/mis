version: "3"

services: 
    #NGINX
    webserver:
        image: nginx:stable-alpine
        container_name: mis_nginx
        restart: unless-stopped
        ports: 
            - "8080:80"
        volumes: 
            - .:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - php
            - mysql 
        networks: 
            - mis_network
    #MYSQL
    mysql:
        image: mysql:8.0.21
        container_name: mis_mysql
        restart: unless-stopped
        tty: true
        ports: 
            - "33061:3306"
        environment: 
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes: 
            - ./docker/mysql/data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/mysql-custom.cnf
        networks: 
            - mis_network
    #PHP
    php:
        build:
            context: .
            dockerfile: ./docker/php/php.dockerfile
        container_name: mis_php
        volumes: 
            - .:/var/www/html
        ports: 
            - "9000:9000"
        networks: 
            - mis_network
    #COMPOSER
    composer:
        image: composer:latest
        container_name: mis_composer
        volumes: 
            - .:/var/www/html
        working_dir: /var/www/html
        depends_on: 
            - php
    #NPM
    npm:
        image: node:14.9
        container_name: mis_npm
        volumes: 
            - .:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']
    #ARTISAN
    artisan:
        build: 
            context: .
            dockerfile: ./docker/php/php.dockerfile 
        container_name: mis_network
        volumes: 
            - .:/var/www/html
        depends_on: 
            - mysql
        working_dir: /var/www/html
        entrypoint: ['php', '/var/www/html/artisan']
        networks: 
            - mis_network
# Docker Network
networks: 
    mis_network:
